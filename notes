Boot:
------
	
	- BIOS: set of routines. Loaded from a chip into memory.
	- 1st sector of a storage device - Boot sector
		- identified by "0x55 0xaa" in last two bytes of 512B sector. (remember: if little endian then "0xaa55")

	- To assemble to machine code: (Here -f bin refers to raw binary without metadata - just bytes)
		$nasm boot sect.asm -f bin -o boot sect.bin

	- When you write to a disk, you should not write to its file system. Use some software that writes to the first sector of the disk.
	- For backward compatibility, machine starts in 16 bit real mode.
    - Bios loads bootsector from disk to memory
    - 0x0 - Interrupt vector table
    - 0x7c00 - Bootloader

            nasm -f bin boot_sect.asm -o boot_sect.bin
            truncate boot_sect.bin -s 1200k
            mkisofs -o myos.iso -b boot_sect.bin /abs/path/to/PWD

    - In 16 bit mode the push/pop stack instructions work on 16 bit values

    - TUI - Text User Interface
    - GUI - Graphical User Interface

General:
-------
	
	- word: Maximum processing unit in current mode. 
		- A word in x86 is 16 bits. (double word - 4B, quad word - 8B) 	
	- Interrupt vector table is loaded into physical address 0x0 by BIOS.
		- It contains addresses of Interrupt Service Routines(ISRs)

Later Look:
-------
	
	- Minix operating system.
	- How VirtualBox executes guest os instructions ?
	- what is so speacial about an "iso" file ?
